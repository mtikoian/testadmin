
/*
$Author: smclarnon $
$Date: 2014-02-19 09:34:42 -0500 (Wed, 19 Feb 2014) $
$Rev: 464 $
$URL: http://seisubvapp01/TSU_Utilities/DBApp2014/Database/DB/Roles/DBApp_Processing.sql $

Description:    This script creates 4 database roles for use in GWP_Billing_Statistics.

*/

begin try

	declare @RoleName sysname
	set @RoleName = N'dbApp_Processor'
	if  exists (select * from sys.database_principals where name = @RoleName and type = 'R') begin

		declare @RoleMemberName sysname
		declare Member_Cursor cursor for
		select [name]
		from sys.database_principals
		where principal_id in (
			select member_principal_id
			from sys.database_role_members
			where role_principal_id in (
				select principal_id
				from sys.database_principals where [Name] = @RoleName  and type = 'R' ))

		open Member_Cursor;

		fetch next
		from Member_Cursor
		into @RoleMemberName

		while @@fetch_status = 0 begin

			exec sp_droprolemember @rolename = @RoleName, @membername = @RoleMemberName

			fetch next
			from Member_Cursor
			into @RoleMemberName
		end;

		close Member_Cursor;
		deallocate Member_Cursor;
	end

	if  exists (select * from sys.database_principals where name = N'dbApp_Processor' and type = 'R')
		drop role dbApp_Processor

	-- ================================================================================================

	--declare @RoleName sysname
	set @RoleName = N'dbApp_Operator'

	if  exists (select * from sys.database_principals where name = @RoleName and type = 'R') begin

		--declare @RoleMemberName sysname
		declare Member_Cursor cursor for

		select [name]
		from sys.database_principals
		where principal_id in (
			select member_principal_id
			from sys.database_role_members
			where role_principal_id in (
				select principal_id
				from sys.database_principals where [name] = @RoleName  and type = 'R' ))

		open Member_Cursor;

		fetch next from Member_Cursor
		into @RoleMemberName

		while @@fetch_status = 0
		begin

			exec sp_droprolemember @rolename=@RoleName, @membername= @RoleMemberName

			fetch next from Member_Cursor
			into @RoleMemberName
		end;

		close Member_Cursor;
		deallocate Member_Cursor;
	end

	if  exists (select * from sys.database_principals where name = N'dbApp_Operator' and type = 'R')
	drop role dbApp_Operator

	-- ================================================================================================

	--declare @RoleName sysname


	set @RoleName = N'dbApp_Admin'
	if  exists (select * from sys.database_principals where name = @RoleName and type = 'R') begin

		--declare @RoleMemberName sysname
		declare Member_Cursor cursor for

		select [name]
		from sys.database_principals
		where principal_id in (
			select member_principal_id
			from sys.database_role_members
			where role_principal_id in (
				select principal_id
				from sys.database_principals where [name] = @RoleName  and type = 'R' ))

		open Member_Cursor;

		fetch next from Member_Cursor
		into @RoleMemberName

		while @@fetch_status = 0
		begin

			exec sp_droprolemember @rolename=@RoleName, @membername= @RoleMemberName

			fetch next from Member_Cursor
			into @RoleMemberName
		end;

		close Member_Cursor;
		deallocate Member_Cursor;
	end


	if  exists (select * from sys.database_principals where name = N'dbApp_Admin' and type = 'R')
		drop role [dbApp_Admin]

	-- ================================================================================================

	--declare @RoleName sysname


	set @RoleName = N'dbApp_Reporter'
	if  exists (select * from sys.database_principals where name = @RoleName and type = 'R') begin

		--declare @RoleMemberName sysname
		declare Member_Cursor cursor for

		select [name]
		from sys.database_principals
		where principal_id in (
			select member_principal_id
			from sys.database_role_members
			where role_principal_id in (
				select principal_id
				from sys.database_principals where [name] = @RoleName  and type = 'R' ))

		open Member_Cursor;

		fetch next from Member_Cursor
		into @RoleMemberName

		while @@fetch_status = 0
		begin

			exec sp_droprolemember @rolename=@RoleName, @membername= @RoleMemberName

			fetch next from Member_Cursor
			into @RoleMemberName
		end;

		close Member_Cursor;
		deallocate Member_Cursor;
	end

	if  exists (select * from sys.database_principals where name = N'dbApp_Reporter' and type = 'R')
	drop role [dbApp_Reporter]

	-- ================================================================================================

	create role dbApp_Processor authorization dbo;

    if not exists(
        select *
        from sys.database_principals
        where name = N'dbApp_Processor'
                ) begin
        print 'Create of role dbApp_Processor failed.'
    end;

	-- ================================================================================================
	create role dbApp_Admin authorization dbo;

    if not exists(
        select *
        from sys.database_principals
        where name = N'dbApp_Admin'
                ) begin
        print 'Create of role dbApp_Admin failed.'
    end;

	-- ================================================================================================
	create role dbApp_Reporter authorization dbo;

    if not exists(
        select *
        from sys.database_principals
        where name = N'dbApp_Reporter'
                ) begin
        print 'Create of role dbApp_Reporter failed.'
    end;

	-- ================================================================================================
	create role dbApp_Operator authorization dbo;

    if not exists(
        select *
        from sys.database_principals
        where name = N'dbApp_Operator'
                ) begin
        print 'Create of role dbApp_Operator failed.'
    end;

	-- ================================================================================================
    exec sp_addrolemember @Rolename = N'dbApp_Operator', @MemberName = N'CTS_Ops';

	-- ================================================================================================
	exec sp_addrolemember @Rolename = 'dbApp_Processor', @MemberName = 'dbApp_Admin';

	-- ================================================================================================
	exec sp_addrolemember @Rolename = 'dbApp_Operator', @MemberName = 'dbApp_Admin';

	exec sp_addrolemember @Rolename = 'dbApp_Operator', @MemberName = 'GWP_Billing_App';

	exec sp_addrolemember @Rolename = 'dbApp_Operator', @MemberName = 'GWP_Billing_Scheduled_Ops';

	-- ================================================================================================

	exec sp_addrolemember @Rolename = 'dbApp_Reporter', @MemberName = 'dbApp_Admin';

	-- ================================================================================================

end try
begin catch
	select	error_number() as ErrorNumber,
			error_message() as ErrorMEssage,
			error_line() as ErrorLine,
			error_state() as ErrorState,
			error_severity() as ErrorSeverity,
			error_procedure() as ErrorProcedure;
end catch;

go

begin try

	grant create synonym to dbApp_Reporter;
	grant create synonym to dbApp_Operator;
	grant execute on schema :: CorpBill to dbApp_Operator; 
	grant alter on schema::CorpBill to dbApp_Operator; 

end try
begin catch
	select	error_number() as ErrorNumber,
			error_message() as ErrorMEssage,
			error_line() as ErrorLine,
			error_state() as ErrorState,
			error_severity() as ErrorSeverity,
			error_procedure() as ErrorProcedure;
end catch;

